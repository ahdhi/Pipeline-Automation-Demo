pipeline {
    agent any

    environment {
        JDK_TOOL = 'JDK 8'
    }

    stages {
        stage('Set Up Environment') {
            steps {
                script {
                    def availableJDKs = tool name: 'JDK', type: 'hudson.model.JDK'
                    for (jdk in availableJDKs) {
                        if (isJDK8(jdk)) {
                            JDK_TOOL = jdk
                            break
                        }
                    }
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    def mvn = tool name: 'Maven', type: 'hudson.tasks.Maven$MavenInstallation'

                    env.PATH = "${env.JDK_TOOL}/bin:${env.PATH}"
                    env.JAVA_HOME = env.JDK_TOOL

                    sh "${mvn}/bin/mvn clean install"
                }
            }
            post {
                success {
                    emailext(
                        subject: "Build Successful",
                        body: "The build stage completed successfully.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
                failure {
                    emailext(
                        subject: "Build Failed",
                        body: "The build stage failed. Check the logs for details.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                sh 'mvn test'
                sh './run_integration_tests.sh'
            }
            post {
                success {
                    emailext(
                        subject: "Tests Successful",
                        body: "The tests stage completed successfully.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
                failure {
                    emailext(
                        subject: "Tests Failed",
                        body: "The tests stage failed. Check the logs for details.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
            }
        }

        stage('Code Analysis') {
            steps {
                sh 'sonar-scanner'
            }
            post {
                success {
                    emailext(
                        subject: "Code Analysis Successful",
                        body: "The code analysis stage completed successfully.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
                failure {
                    emailext(
                        subject: "Code Analysis Failed",
                        body: "The code analysis stage failed. Check the logs for details.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
            }
        }

        stage('Security Scan') {
            steps {
                sh './run_security_scan.sh'
            }
            post {
                success {
                    emailext(
                        subject: "Security Scan Successful",
                        body: "The security scan stage completed successfully.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
                failure {
                    emailext(
                        subject: "Security Scan Failed",
                        body: "The security scan stage failed. Check the logs for details.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                sh './deploy_to_staging.sh'
            }
            post {
                success {
                    emailext(
                        subject: "Deployment to Staging Successful",
                        body: "The deployment to staging stage completed successfully.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
                failure {
                    emailext(
                        subject: "Deployment to Staging Failed",
                        body: "The deployment to staging stage failed. Check the logs for details.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                sh './run_integration_tests_on_staging.sh'
            }
            post {
                success {
                    emailext(
                        subject: "Integration Tests on Staging Successful",
                        body: "The integration tests on staging stage completed successfully.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
                failure {
                    emailext(
                        subject: "Integration Tests on Staging Failed",
                        body: "The integration tests on staging stage failed. Check the logs for details.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                sh './deploy_to_production.sh'
            }
            post {
                success {
                    emailext(
                        subject: "Deployment to Production Successful",
                        body: "The deployment to production stage completed successfully.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
                failure {
                    emailext(
                        subject: "Deployment to Production Failed",
                        body: "The deployment to production stage failed. Check the logs for details.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
            }
        }
    }

    post {
        success {
            emailext(
                subject: "Pipeline Successful",
                body: "The Jenkins pipeline completed successfully.",
                to: "personal.adhithyan@gmail.com",
                attachLog: true,
            )
        }
        failure {
            emailext(
                subject: "Pipeline Failed",
                body: "The Jenkins pipeline failed. Check the logs for details.",
                to: "personal.adhithyan@gmail.com",
                attachLog: true,
            )
        }
    }
}

def isJDK8(jdk) {
    return jdk.contains("8") || jdk.contains("1.8")
}
