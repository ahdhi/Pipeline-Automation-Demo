pipeline {
    agent any
    environment {
        // Define environment variables if needed
    }
    stages {
        stage('Build') {
            steps {
                // Use a build automation tool like Maven
                // Example: sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                // Use test automation tools for unit and integration tests
                // Example: sh 'npm test' or 'pytest'
            }
        }
        stage('Code Analysis') {
            steps {
                // Integrate a code analysis tool
                // Example: sh 'sonar-scanner'
            }
        }
        stage('Security Scan') {
            steps {
                // Integrate a security scanning tool
                // Example: sh 'npm audit'
            }
        }
        stage('Deploy to Staging') {
            steps {
                // Deploy to a staging server (e.g., AWS EC2)
                // Example: sh 'aws deploy-to-staging-script.sh'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                // Run integration tests on the staging environment
                // Example: sh 'npm run integration-test'
            }
        }
        stage('Deploy to Production') {
            steps {
                // Deploy to a production server (e.g., AWS EC2)
                // Example: sh 'aws deploy-to-production-script.sh'
            }
        }
    }
    post {
        success {
            // Send success notification email with logs as attachment
            emailext attachLog: true, subject: 'Pipeline Successful', to: 'personal.adhithyan@gmail.com'
        }
        failure {
            // Send failure notification email with logs as attachment
            emailext attachLog: true, subject: 'Pipeline Failed', to: 'personal.adhithyan@gmail.com'
        }
    }
}
