pipeline {
    agent any

    tools {
        // Define the SonarQube Scanner tool
        sonarqubeScanner = tool name: 'SonarQubeScanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
        // Define the Maven tool
        maven = tool name: 'Maven', type: 'hudson.tasks.Maven$MavenInstallation'
    }

    stages {
        stage('Build') {
            steps {
                script {
                    // Run Maven build
                    sh "${mvn}/bin/mvn clean install"
                }
            }
            post {
                success {
                    emailext(
                        subject: "Build Successful",
                        body: "The build stage completed successfully.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
                failure {
                    emailext(
                        subject: "Build Failed",
                        body: "The build stage failed. Check the logs for details.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                script {
                    // Run Maven test
                    sh "${mvn}/bin/mvn test"
                }
            }
            post {
                success {
                    emailext(
                        subject: "Tests Successful",
                        body: "The tests stage completed successfully.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
                failure {
                    emailext(
                        subject: "Tests Failed",
                        body: "The tests stage failed. Check the logs for details.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
            }
        }

        stage('Code Analysis') {
            steps {
                script {
                    // Run SonarQube Scanner with the defined tool
                    withSonarQubeEnv('SonarQubeAdhi') {
                        sh "${sonarqubeScanner}/bin/sonar-scanner"
                    }
                }
            }
            post {
                success {
                    emailext(
                        subject: "Code Analysis Successful",
                        body: "The code analysis stage completed successfully.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
                failure {
                    emailext(
                        subject: "Code Analysis Failed",
                        body: "The code analysis stage failed. Check the logs for details.",
                        to: "personal.adhithyan@gmail.com",
                        attachLog: true,
                    )
                }
            }
        }

        // Add stages for Security Scan, Deployment, and Integration Tests on Staging and Production as needed.
    }

    post {
        success {
            emailext(
                subject: "Pipeline Successful",
                body: "The Jenkins pipeline completed successfully.",
                to: "personal.adhithyan@gmail.com",
                attachLog: true,
            )
        }
        failure {
            emailext(
                subject: "Pipeline Failed",
                body: "The Jenkins pipeline failed. Check the logs for details.",
                to: "personal.adhithyan@gmail.com",
                attachLog: true,
            )
        }
    }
}
