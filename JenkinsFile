pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh 'mvn clean install'
                // Use 'mvn clean install' or the appropriate build command for your project
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                sh 'mvn test'
                // Use 'mvn test' or the appropriate test command for your project
            }
        }
        stage('Code Analysis') {
            steps {
                sh 'sonar-scanner'
                // Use 'sonar-scanner' or the appropriate code analysis command for your project
            }
        }
        stage('Security Scan') {
            steps {
                sh 'owasp-zap-scan.sh'
                // Use 'owasp-zap-scan.sh' or the appropriate security scanning command for your project
            }
        }
        stage('Deploy to Staging') {
            steps {
                sh 'aws deploy-to-staging.sh'
                // Use 'aws deploy-to-staging.sh' or the appropriate deployment command for your project
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                sh 'run-staging-tests.sh'
                // Use 'run-staging-tests.sh' or the appropriate staging tests command for your project
            }
        }
        stage('Deploy to Production') {
            steps {
                sh 'aws deploy-to-production.sh'
                // Use 'aws deploy-to-production.sh' or the appropriate deployment command for your project
            }
        }
    }
    post {
        success {
            emailext subject: 'Pipeline Successful',
                body: 'The Jenkins pipeline has completed successfully.',
                recipientProviders: [[$class: 'DevelopersRecipientProvider']]
            archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true
        }
        failure {
            emailext subject: 'Pipeline Failed',
                body: 'The Jenkins pipeline has failed.',
                recipientProviders: [[$class: 'DevelopersRecipientProvider']]
            archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true
        }
    }
}
